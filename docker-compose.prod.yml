version: '3.8'

services:
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    ports:
      - 58894:80
    depends_on:
      - backend
  emulate:
   build:
     context: .
     dockerfile: ./EmulateDockerfile
   command: ["python3", "emulate_queue.py"]
   restart: always
   env_file:
     - ./emulate/.env
   depends_on:
     - redis
     - backend
  sender:
   build:
     context: .
     dockerfile: ./EmulateDockerfile
   command: ["python3", "sender.py"]
   ports:
     - 5678:5678
   restart: always
   env_file:
     - ./emulate/.env
   depends_on:
     - redis
     - backend
  udp_server:
   build:
     context: .
     dockerfile: ./EmulateDockerfile
   command: ["python3", "udp_server.py"]
   restart: always
   ports:
     - 20002:20002/udp
   env_file:
     - ./emulate/.env
   depends_on:
     - redis
     - backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn lights.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/usr/src/app/staticfiles
      - media_volume:/usr/src/app/mediafiles
    restart: always
    expose:
      - 8000
    env_file:
      - backend/.env
    depends_on:
      - database
      - redis
  database:
    image: postgres:9.6.21-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/.env
  redis:
    image: redis:6.2.1-alpine

volumes:
  postgres_data:
  static_volume:
  media_volume:
